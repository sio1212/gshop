<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->


<!-- Enables the Spring MVC @Controller programming model -->


<annotation-driven/>

<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->


<resources location="/resources/" mapping="/resources/**"/>

<resources location="/storage/" mapping="/storage/**"/>

<resources location="/storage/product/" mapping="/storage/product/**"/>

<resources location="/storage/onstore/" mapping="/storage/onstore/**"/>

<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->



<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

<beans:property value=".jsp" name="suffix"/>

</beans:bean>


<!-- 파일 업로드 관련 설정 -->



<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">

<beans:property value="10000000" name="maxUploadSize"/>

<beans:property value="10000000" name="maxInMemorySize"/>

</beans:bean>


<beans:bean class="java.lang.String" id="uploadPath">

<beans:constructor-arg value="D:/log"/>

</beans:bean>

<!-- json -->



<beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" id="jsonView">

<beans:property value="text/html;charset=UTF-8" name="contentType"/>

</beans:bean>

<!-- order 가 0으로 설정을 해주어야 beanName이 String 타입으로 return 되었을때 이 BeanNameResolver가 받게 됩니다 -->



<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" id="beanNameResolver">

<beans:property value="0" name="order"/>

</beans:bean>


<interceptors>

<!-- beforeInterceptor-->



<interceptor>

<mapping path="/**/*.do"/>

<mapping path="/**/**/*.do"/>

<beans:bean class="com.interceptor.PreInterceptors" id="PreInterceptors"/>

</interceptor>

<!-- afterInterceptor-->



<interceptor>

<mapping path="/**/*.do"/>

<mapping path="/**/**/*.do"/>

<exclude-mapping path="/product/productView.do"/>

<beans:bean class="com.interceptor.PostInterceptors" id="PostInterceptors"/>

</interceptor>

</interceptors>

<context:component-scan base-package="com.conf"/>

<context:component-scan base-package="com.main"/>

<context:component-scan base-package="admin.controller"/>

<context:component-scan base-package="com.gshop.controller"/>

<context:component-scan base-package="board.controller"/>		

<context:component-scan base-package="product.controller"/>

<context:component-scan base-package="storage.controller"/>

<context:component-scan base-package="member.controller"/>

<context:component-scan base-package="trading.controller"/>
	

</beans:beans>